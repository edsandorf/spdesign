% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/algorithms.R
\name{make_design_candidate}
\alias{make_design_candidate}
\title{Make a design candidate}
\usage{
make_design_candidate(
  parsed_utility,
  candidate_set,
  current_design_candidate,
  opts,
  iter_with_no_imp,
  type
)
}
\arguments{
\item{parsed_utility}{A list containing the elements of the parsed utility
expression obtained from \code{\link{parse_utility}}.}

\item{candidate_set}{A valid candidate set. This is only used for the
'random' and 'federov' algorithms.}

\item{current_design_candidate}{A candidate for the RSC algorithm. To allow
for marginal changes the candidate is passed back in for each iteration.}

\item{opts}{A list of design options}

\item{iter_with_no_imp}{The iteration number}

\item{type}{One of the implemented types of optimization algorithms}
}
\value{
A data.frame with the design candidate in the 'wide' format. It is
explicitly returned as a dataframe to use with model.matrix and to set up
the environment. Reduces the number of calls to as.data.frame()
}
\description{
The function is a call to \code{\link{switch}} and a wrapper around the
design algorithms \code{\link{random}}, \code{\link{federov}} and
 \code{\link{rsc}}.
}
\details{
The purpose of passing in utility is two-fold:
1) We can determine n_alts
2) We can extract the attribute names for each utility function to allow us
to place the correct restrictions on the design candidate. Specifically, we
restrict all levels of unavailable attributes to zero for alternatives where
they do not feature. This is to ensure that we do not give weight when
deriving the variance-covariance matrix using \code{\link{derive_vcov}}.
Furthermore, the Xs are "sorted" using the order of the candidate set, which
ensures that when we calculate the sum of the probabilities times X, the
correct columns are added together. See \code{\link{derive_vcov}}.
}
